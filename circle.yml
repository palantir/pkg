machine:
  environment:
    GODIST: "go1.7.3.linux-amd64.tar.gz"
    GOPATH: "$HOME/.go_workspace"
    IMPORT_PATH: "github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME"
    GO_PROJECT_SRC_PATH: "$GOPATH/src/$IMPORT_PATH"
  services:
    - docker
  post:
    - mkdir -p download
    - test -e "download/$GODIST" || wget -O "download/$GODIST" "https://storage.googleapis.com/golang/$GODIST"
    - sudo rm -rf /usr/local/go
    - sudo tar -C /usr/local -xzf "download/$GODIST"

checkout:
  post:
    # ensure all tags are fetched and up-to-date
    - git tag -l | xargs git tag -d && git fetch -t

dependencies:
  override:
    - mkdir -p "$GOPATH/src/$IMPORT_PATH"
    - rsync -az --delete ./ "$GOPATH/src/$IMPORT_PATH/"
    - cd "$GO_PROJECT_SRC_PATH" && ./godelw version
  cache_directories:
    - ~/.godel
    - ~/download

test:
  pre:
    - go version
  override:
    - ? |
        case $CIRCLE_NODE_INDEX in
          0)
            cd "$GO_PROJECT_SRC_PATH" && \
            go install $(./godelw packages) && \
            mkdir -p "$CIRCLE_TEST_REPORTS/$CIRCLE_PROJECT_REPONAME" && \
            ./godelw verify --apply=false --junit-output="$CIRCLE_TEST_REPORTS/$CIRCLE_PROJECT_REPONAME/$CIRCLE_PROJECT_REPONAME-tests.xml"
            ;;
          1)
            docker run \
            -v "$GO_PROJECT_SRC_PATH":/go/src/$IMPORT_PATH \
            -v ~/.godel:/root/.godel \
            -e IMPORT_PATH \
            nmiyake/go:alpine-go-1.6 \
            /bin/sh -c 'cd /go/src/$IMPORT_PATH; go version; go env; ./godelw test'
            ;;
          *)
            echo "Unexpected node $CIRCLE_NODE_INDEX"
            ;;
        esac
      :
          parallel: true
